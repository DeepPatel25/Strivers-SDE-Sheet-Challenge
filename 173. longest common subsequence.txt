#include <vector>

int solver(string s, string t, int m, int n, vector<vector<int> >& dp){
	if(m == 0 || n == 0) return 0;
	if(s[m-1] == t[n-1]) return dp[m][n] = 1 + solver(s, t, m -1, n-1, dp);
	if (dp[m][n] != -1) {
        return dp[m][n];
    }
	
	return dp[m][n] = max(solver(s, t, m, n -1, dp), solver(s, t, m-1, n, dp));
}

int lcs(string s, string t)
{
	int m = s.length();
	int n = t.length();

	vector<vector<int>> dp(m + 1, vector<int>(n + 1, -1));
	return solver(s, t, m, n, dp);
}