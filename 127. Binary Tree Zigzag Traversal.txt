#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> ans;
    if(!root) return ans;

    vector<vector<int>> levelOrder;
    queue<BinaryTreeNode<int> *> q;
    q.push(root);

    while(!q.empty()) {
        int size = q.size();
        vector<int> temp;

        for(int i = 0; i < size; i++){
            BinaryTreeNode<int> *node = q.front();
            q.pop();

            if(node->left) q.push(node->left);
            if(node->right) q.push(node->right);
            temp.push_back(node->data);
        }
        levelOrder.push_back(temp);
    }

    for(int i = 0; i < levelOrder.size(); i++){
        if(i % 2 == 1){
            reverse(levelOrder[i].begin(), levelOrder[i].end());
        }
        for(auto it: levelOrder[i]){
            ans.push_back(it);
        }
    }

    return ans;
}
