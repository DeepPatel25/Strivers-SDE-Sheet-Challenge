bool isValidParenthesis(string expression)
{
    stack<char> st;

    for(int i = 0; i < expression.size(); i++){
        char ch = expression[i];

        if(ch == '(' || ch == '{' || ch == '[') {
            st.push(ch);
        } else {
            if(st.empty()) return false;
            if ((st.top() == '(' && ch == ')') ||
                (st.top() == '[' && ch == ']') || 
                (st.top() == '{' && ch == '}')) {
                    st.pop();
                }
            else {
                return false;
            }
        }
    }

    return st.empty();
}