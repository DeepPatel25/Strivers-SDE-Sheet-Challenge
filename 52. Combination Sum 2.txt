#include<bits/stdc++.h>

void helper(int idx, int target, vector<int> &arr, vector<vector<int>> &ans, vector<int> &temp) {
	if(target == 0) {
		ans.push_back(temp);
		return;
	}

	for(int i = idx; i < arr.size(); i++){
		if(i > idx && arr[i] == arr[i - 1]) {
			continue;
		}

		if(arr[i] > target) break;
		temp.push_back(arr[i]);
		helper(i + 1, target - arr[i], arr, ans, temp);
		temp.pop_back();
	}
}

vector<vector<int>> combinationSum2(vector<int> &arr, int n, int target)
{
	sort(arr.begin(), arr.end());
	vector<int> temp;
	vector<vector<int>> ans;

	helper(0, target, arr, ans, temp);
	return ans;
}
